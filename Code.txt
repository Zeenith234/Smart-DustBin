#include <SoftwareSerial.h>
SoftwareSerial mySerial(6,7); // RX, TX
#include <Servo.h>
int servoPin = 12;
Servo Servo1; 
const int trigPin = 9;
const int echoPin = 10;
const int IR=8;
const int BUZZ=11;
const int RLY=13;
long duration;
int distance;
int flag=0;
void setup() 
{
  Serial.begin(9600);
  mySerial.begin(9600);  
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input  
  pinMode(IR,INPUT);   
  pinMode(BUZZ, OUTPUT);  
  pinMode(RLY, OUTPUT);    
  digitalWrite(RLY, LOW);    
  Serial.println("WELCOME");
  digitalWrite(BUZZ, LOW);
  Servo1.attach(servoPin);   
  digitalWrite(RLY, HIGH);   
  delay(1000);
  Servo1.write(90);
  delay(1000);
  digitalWrite(RLY, LOW);   
}
void loop() 
{
  if(digitalRead(IR)==LOW) 
  {
  delay(500);
  digitalWrite(RLY, HIGH);   
  delay(1000);
  Servo1.write(0);
  delay(1000);
  digitalWrite(RLY, LOW);  
  delay(1000);   
wait:  
  if(digitalRead(IR)==LOW) 
  {
  goto wait;     
  }
  digitalWrite(RLY, HIGH);   
  delay(1000);
  Servo1.write(90);
  delay(1000);
  digitalWrite(RLY, LOW);  
  }  
  ultra();  
  if(distance>5)
  {
  flag=0;
  digitalWrite(BUZZ, LOW);       
  }
  if(distance<=5)
  {
  Serial.println("FULL");    
  digitalWrite(BUZZ, HIGH); 
  if(flag==0)
  { 
    mySerial.begin(9600);   
    delay(1000);   
    mySerial.println("AT"); //Handshaking with SIM900
    delay(1000); 
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    delay(1000); 
//    mySerial.println("AT+CMGS=\"+918500355243\"");//change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.println("AT+CMGS=\"+919885197565\"");    
    delay(1000);  
    mySerial.print("ALERT,DUSTBIN HAS BEEN FULL AT LOC:1-7-99/A,GCET,CHEERYAL");    
    delay(1000);    
    mySerial.write(26); 
    delay(1000); 
    flag=1;
  }
  }
 
}


void ultra()
{
delay(100);  
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);
// Calculating the distance
distance= duration*0.034/2;
// Prints the distance on the Serial Monitor
Serial.println(distance);  
delay(100);
}